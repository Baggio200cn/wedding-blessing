import tensorflow as tf

def build_lstm_model(input_shape):
    """
    构建LSTM模型
    :param input_shape: 输入数据的形状
    :return: 编译后的模型
    """
    model = tf.keras.Sequential([
        tf.keras.layers.LSTM(128, input_shape=input_shape, return_sequences=True),
        tf.keras.layers.LSTM(64),
        tf.keras.layers.Dense(32, activation='relu'),
        tf.keras.layers.Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    return model

def train_lstm_model(train_data, train_labels, input_shape):
    """
    训练LSTM模型
    :param train_data: 训练数据
    :param train_labels: 训练标签
    :param input_shape: 输入数据的形状
    :return: 训练好的模型
    """
    model = build_lstm_model(input_shape)
    model.fit(train_data, train_labels, epochs=10, batch_size=32)
    return model
